{"version":3,"sources":["globalStyle.tsx","Theme.tsx","components/TextInput/TextInput.tsx","components/TextInput/index.tsx","components/ErrorMessage/ErrorMessage.tsx","components/ErrorMessage/index.tsx","components/Button/Button.tsx","components/Button/index.tsx","components/FullLoading/FullLoading.tsx","components/FullLoading/index.tsx","api.ts","pages/Login.tsx","pages/SignUp.tsx","components/TodoCard/TodoCard.tsx","components/TodoCard/index.tsx","pages/Dashboard.tsx","App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","theme","colors","background","primary","accent","lightAccent","error","black","Theme","children","Wrapper","styled","div","Input","Field","props","Label","h4","TextInput","name","label","obscure","data-testid","type","Container","ErrorMessage","StyledButton","button","marginTop","Button","onClick","Overlay","StyledLoading","ReactLoading","FullLoading","show","cookies","Cookies","server","axios","create","baseURL","interceptors","request","use","config","token","get","headers","Authorization","response","status","set","window","location","reload","Promise","reject","ApiErrorMessage","h3","AccountCreatedMessage","LinkButton","Link","Login","useState","loggedIn","setLoggedIn","errorMessage","state","fetchUserDataErrorMessage","to","initialValues","Email","Password","validationSchema","Yup","required","email","onSubmit","values","a","setStatus","post","password","then","data","catch","message","formik","isSubmitting","accountCreated","SignUp","success","setSuccess","pathname","Name","ConfirmPassword","oneOf","Background","Title","Description","p","Caption","EditableTitle","isErrored","red","backgroundColor","EditableDescription","TopIconsRow","BottomRow","IconBase","css","EditIcon","MdEdit","CancelIcon","MdCancel","SaveIcon","MdSave","DeleteIcon","MdDelete","IconButton","TodoCard","todo","onEditCancel","onSave","currentTodo","setCurrentTodo","id","editMode","setEditMode","deleteTodo","delete","toggleDone","put","done","title","description","body","handleSubmit","handleReset","errors","placeholder","component","TodosContainer","AddIcon","MdAddCircle","Tab","isActive","TabsContainer","Dashboard","loading","setLoading","userData","setUserData","todos","setTodos","setErrorMessage","refreshTodos","setRefreshTodos","newTodoBeingAdded","setNewTodoBeingAdded","showDoneTodos","setShowDoneTodos","toggleRefresh","prev","fetchUserData","finally","fetchTodos","useEffect","fetchUserDataError","length","filter","map","key","App","isTokenSet","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f35d6b0f.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  html, body {\n    min-height: 100%;\n    width: 100%;\n    margin: 0;\n    overflow: auto;\n  }\n\n  body {\n    font-family: Roboto;\n    font-size: calc(1em + 1vw);\n    color: #fff;\n  }\n\n  button {\n    font-family: Roboto;\n    font-size: inherit;\n    color: #032B43;\n  }\n\n  input, textarea {\n    font-family: Roboto;\n    font-size: inherit;\n    color: #032B43;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nconst theme = {\n  colors: {\n    background: '#032B43',\n    primary: '#276FBF',\n    accent: '#2EC4B6',\n    lightAccent: '#eafaf9',\n    error: '#FF3366',\n    black: '#02020A',\n  },\n};\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst Theme = ({ children }: Props) => (\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n);\n\nexport default Theme;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Field } from 'formik';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst Input = styled(Field)`\n  background-color: ${(props) => props.theme.colors.lightAccent};\n  padding: 20px;\n  text-align: center;\n  transition: border-color 250ms ease;\n  border: 2px solid;\n  border-radius: 50px;\n\n  &:focus {\n    outline: none;\n    border-color: ${(props) => props.theme.colors.accent};\n  }\n`;\n\nconst Label = styled.h4`\n  text-align: left;\n  margin-bottom: 1px;\n  margin-left: 1vw;\n`;\n\ninterface Props {\n  name: string;\n  label?: string;\n  obscure?: boolean;\n}\n\nconst TextInput = ({ name, label, obscure = false }: Props) => {\n  return (\n    <Wrapper>\n      <Label>{label || name}</Label>\n      <Input\n        name={name}\n        data-testid=\"TextInput\"\n        type={obscure ? 'password' : 'text'}\n      />\n    </Wrapper>\n  );\n};\n\nexport default TextInput;\n","import TextInput from './TextInput';\nexport default TextInput;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { ErrorMessage as FormikErrorMessage, ErrorMessageProps } from 'formik';\n\nconst Container = styled.div`\n  color: ${(props) => props.theme.colors.error};\n`;\n\nconst ErrorMessage = (props: ErrorMessageProps) => (\n  <Container>\n    <FormikErrorMessage {...props} />\n  </Container>\n);\nexport default ErrorMessage;\n","import ErrorMessage from './ErrorMessage';\nexport default ErrorMessage;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface StyledProps {\n  marginTop?: string;\n}\n\nconst StyledButton = styled.button`\n  background-color: ${(props) => props.theme.colors.accent};\n  border: none;\n  border-radius: 50px;\n  padding: 10px 20px;\n  transition: opacity 250ms ease;\n  margin-top: ${(props: StyledProps) => props.marginTop || '0px'};\n  flex: 1;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\ninterface Props {\n  onClick?: (event: React.MouseEvent) => void;\n  type?: 'button' | 'submit' | 'reset' | undefined;\n  children: React.ReactNode;\n}\n\nconst Button = ({\n  onClick,\n  type,\n  children,\n  marginTop,\n}: Props & StyledProps) => {\n  return (\n    <StyledButton type={type} onClick={onClick} marginTop={marginTop}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import Button from './Button';\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\nimport ReactLoading from 'react-loading';\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.4);\n  z-index: 2;\n`;\n\nconst StyledLoading = styled(ReactLoading)`\n  display: block;\n  margin: auto;\n  text-align: center;\n  width: 10vw;\n  height: 10vh;\n`;\n\nconst FullLoading = ({ show = false }: { show: boolean }) =>\n  show ? (\n    <Overlay>\n      <StyledLoading data-testid=\"FullLoading\" type=\"bubbles\" />\n    </Overlay>\n  ) : (\n    <></>\n  );\n\nexport default FullLoading;\n","import FullLoading from './FullLoading';\nexport default FullLoading;\n","import axios from 'axios';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nconst server = axios.create({\n  baseURL:\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:8000/api'\n      : 'https://todo-app-server0.herokuapp.com/api',\n});\n\nserver.interceptors.request.use((config) => {\n  const token = cookies.get('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  return config;\n});\n\nserver.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response.status === 401) {\n      cookies.set('token', '');\n      window.location.reload();\n    }\n\n    // https://github.com/axios/axios/issues/41#issuecomment-386762576\n    return Promise.reject(error);\n  },\n);\n\nexport default server;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Redirect, Link } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\n\nimport TextInput from '../components/TextInput';\nimport ErrorMessage from '../components/ErrorMessage';\nimport Button from '../components/Button';\nimport FullLoading from '../components/FullLoading';\nimport server from '../api';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ApiErrorMessage = styled.h3`\n  color: ${(props) => props.theme.colors.error};\n  text-align: center;\n`;\n\nconst AccountCreatedMessage = styled.h3`\n  text-align: center;\n`;\n\nconst LinkButton = styled(Link)`\n  display: flex;\n  text-decoration: none;\n`;\n\ninterface Props {\n  location?: {\n    state: {\n      accountCreated: boolean;\n      fetchUserDataErrorMessage: string;\n    };\n  };\n}\n\nconst Login = (props: Props) => {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const errorMessage =\n    props.location &&\n    props.location.state &&\n    props.location.state.fetchUserDataErrorMessage\n      ? props.location.state.fetchUserDataErrorMessage\n      : '';\n\n  return loggedIn ? (\n    <Redirect to=\"/dashboard\" />\n  ) : (\n    <Formik\n      initialValues={{ Email: '', Password: '' }}\n      validationSchema={Yup.object({\n        Email: Yup.string().required().email(),\n        Password: Yup.string().required(),\n      })}\n      onSubmit={async (values, { setStatus }) => {\n        return server\n          .post('/login', {\n            email: values.Email,\n            password: values.Password,\n          })\n          .then((response) => {\n            const token = response.data.data.token;\n            new Cookies().set('token', token);\n            setLoggedIn(true);\n          })\n          .catch((error) => {\n            if (error.response) {\n              setStatus(error.response.data.message);\n            }\n          });\n      }}\n    >\n      {(formik) => (\n        <Form>\n          <FullLoading show={formik.isSubmitting} />\n          <Container>\n            {(formik.status || errorMessage) && (\n              <ApiErrorMessage>{formik.status || errorMessage}</ApiErrorMessage>\n            )}\n            {props.location &&\n              props.location.state &&\n              props.location.state.accountCreated && (\n                <AccountCreatedMessage>\n                  Account successfully created!\n                </AccountCreatedMessage>\n              )}\n            <TextInput name=\"Email\" />\n            <ErrorMessage name=\"Email\" />\n            <TextInput name=\"Password\" obscure />\n            <ErrorMessage name=\"Password\" />\n\n            <Button type=\"submit\" marginTop=\"20px\">\n              Login\n            </Button>\n            <LinkButton to=\"/signup\">\n              <Button marginTop=\"10px\"> Create a new account </Button>\n            </LinkButton>\n          </Container>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Redirect } from 'react-router-dom';\n\nimport TextInput from '../components/TextInput';\nimport ErrorMessage from '../components/ErrorMessage';\nimport Button from '../components/Button';\nimport FullLoading from '../components/FullLoading';\nimport server from '../api';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ApiErrorMessage = styled.h3`\n  color: ${(props) => props.theme.colors.error};\n  text-align: center;\n`;\n\nconst SignUp = () => {\n  const [success, setSuccess] = useState(false);\n\n  return success ? (\n    <Redirect to={{ pathname: '/login', state: { accountCreated: true } }} />\n  ) : (\n    <Formik\n      initialValues={{\n        Name: '',\n        Email: '',\n        Password: '',\n        ConfirmPassword: '',\n      }}\n      validationSchema={Yup.object({\n        Name: Yup.string().required(),\n        Email: Yup.string().required().email(),\n        Password: Yup.string().required(),\n        ConfirmPassword: Yup.string().oneOf(\n          [Yup.ref('Password'), null],\n          \"Passwords don't match\",\n        ),\n      })}\n      onSubmit={async (values, { setStatus }) => {\n        return server\n          .post('/user', {\n            name: values.Name,\n            email: values.Email,\n            password: values.Password,\n          })\n          .then((response) => {\n            if (response && response.status === 201) setSuccess(true);\n          })\n          .catch((error) => {\n            if (error.response) {\n              setStatus(error.response.data.message);\n            }\n          });\n      }}\n    >\n      {(formik) => (\n        <Form>\n          <FullLoading show={formik.isSubmitting} />\n          <Container>\n            {formik.status && (\n              <ApiErrorMessage>{formik.status}</ApiErrorMessage>\n            )}\n            <TextInput name=\"Name\" />\n            <ErrorMessage name=\"Name\" />\n            <TextInput name=\"Email\" />\n            <ErrorMessage name=\"Email\" />\n            <TextInput name=\"Password\" obscure />\n            <ErrorMessage name=\"Password\" />\n            <TextInput\n              name=\"ConfirmPassword\"\n              label=\"Confirm Password\"\n              obscure\n            />\n            <ErrorMessage name=\"ConfirmPassword\" />\n\n            <Button type=\"submit\" marginTop=\"60px\">\n              Sign Up\n            </Button>\n          </Container>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default SignUp;\n","import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n  MdEdit,\n  MdCancel,\n  MdSave,\n  MdDone,\n  MdDelete,\n  MdSettingsBackupRestore,\n} from 'react-icons/md';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\n\nimport server from '../../api';\n\nconst Background = styled.div`\n  display: flex;\n  background-color: ${(props) => props.theme.colors.lightAccent};\n  color: ${(props) => props.theme.colors.background};\n  overflow-wrap: break-word;\n  flex-direction: column;\n  justify-content: start;\n  padding: 20px;\n  margin: 10px;\n  min-width: 30vw;\n  max-width: 80vw;\n  border-radius: 10px;\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5);\n`;\n\nconst Title = styled.h4`\n  margin: 0;\n`;\n\nconst Description = styled.p`\n  margin: 0;\n`;\n\nconst Caption = styled.p`\n  margin: 0;\n  margin-right: 5px;\n  font-size: small;\n`;\n\nconst EditableTitle = styled(Field)<{ isErrored: boolean }>`\n  margin: 0;\n  background-color: ${(props) => props.theme.colors.lightAccent};\n  font-weight: bold;\n  transition: border-color 250ms ease;\n  border: none;\n  border-bottom: 2px solid;\n  border-color: ${(props) =>\n    props.isErrored\n      ? props.theme.colors.red\n      : props.theme.colors.backgroundColor};\n\n  &:focus {\n    outline: none;\n    border-color: ${(props) => props.theme.colors.accent};\n  }\n`;\n\nconst EditableDescription = styled(EditableTitle)`\n  resize: none;\n  font-weight: normal;\n`;\n\nconst TopIconsRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  width: 100%;\n`;\n\nconst BottomRow = styled(TopIconsRow)`\n  justify-content: space-between;\n  margin-top: 30px;\n`;\n\nconst IconBase = css`\n  &:active {\n    transform: translate(2px, 2px);\n  }\n`;\n\nconst EditIcon = styled(MdEdit)`\n  ${IconBase}\n`;\n\nconst CancelIcon = styled(MdCancel)`\n  ${IconBase}\n  margin-left: 10px;\n`;\n\nconst SaveIcon = styled(MdSave)`\n  ${IconBase}\n`;\n\nconst DeleteIcon = styled(MdDelete)`\n  ${IconBase}\n  color: ${(props) => props.theme.colors.error};\n`;\n\nconst IconButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  text-align: center;\n  background-color: inherit;\n  border: none;\n  border-radius: 8px;\n  box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.5);\n\n  &:focus {\n    outline: none;\n  }\n\n  &:active {\n    transform: translate(2px, 2px);\n  }\n`;\n\ninterface Props {\n  todo: {\n    title: string;\n    description: string;\n    id?: number;\n    done: boolean;\n  };\n  onSave: Function;\n  onEditCancel?: Function;\n}\n\nconst TodoCard = ({ todo, onEditCancel, onSave }: Props) => {\n  const [currentTodo, setCurrentTodo] = useState(todo);\n  const [editMode, setEditMode] = useState(currentTodo.id ? false : true);\n\n  const deleteTodo = async () => {\n    server.delete(`/todo/${currentTodo.id}`).then((response) => {\n      if (response.status === 200) {\n        setCurrentTodo(response.data.data);\n        onSave();\n      }\n    });\n  };\n\n  const toggleDone = async () => {\n    server\n      .put(`todo/${currentTodo.id}`, { done: !currentTodo.done })\n      .then((response) => {\n        if (response.status === 200) {\n          setCurrentTodo(response.data.data);\n          onSave();\n        }\n      });\n  };\n\n  return (\n    <Background>\n      <Formik\n        initialValues={{\n          Title: currentTodo.title,\n          Description: currentTodo.description,\n        }}\n        validationSchema={Yup.object({\n          Title: Yup.string().required(),\n          Description: Yup.string().required(),\n        })}\n        onSubmit={async (values, { setStatus }) => {\n          const body = {\n            title: values.Title,\n            description: values.Description,\n          };\n\n          return (currentTodo.id\n            ? server.put(`/todo/${currentTodo.id}`, body)\n            : server.post('/todo', body)\n          )\n            .then((response) => {\n              if (response.status === 200 || response.status === 201) {\n                setCurrentTodo(response.data.data);\n                onSave();\n              }\n            })\n            .catch((error) => {\n              if (error.response) {\n                setStatus(error.response.data.message);\n              }\n            });\n        }}\n      >\n        {(formik) =>\n          editMode ? (\n            <>\n              <TopIconsRow>\n                <SaveIcon\n                  onClick={() => {\n                    formik.handleSubmit();\n                    setEditMode(false);\n                  }}\n                />\n                <CancelIcon\n                  onClick={() => {\n                    formik.handleReset();\n                    setEditMode(false);\n                    if (onEditCancel) onEditCancel();\n                  }}\n                />\n              </TopIconsRow>\n\n              <EditableTitle\n                name=\"Title\"\n                isErrored={formik.errors.Title}\n                placeholder=\"Title\"\n              />\n\n              <EditableDescription\n                name=\"Description\"\n                component=\"textarea\"\n                isErrored={formik.errors.Description}\n                placeholder=\"Description\"\n              />\n\n              {currentTodo.id && (\n                <BottomRow>\n                  <IconButton\n                    onClick={async () => {\n                      await deleteTodo();\n                    }}\n                  >\n                    <Caption> Delete Todo </Caption>\n                    <DeleteIcon />\n                  </IconButton>\n                  <IconButton\n                    onClick={async () => {\n                      await toggleDone();\n                    }}\n                  >\n                    <Caption>\n                      {currentTodo.done ? 'Mark as undone' : 'Mark as done'}\n                    </Caption>\n                    {currentTodo.done ? (\n                      <MdSettingsBackupRestore />\n                    ) : (\n                      <MdDone />\n                    )}\n                  </IconButton>\n                </BottomRow>\n              )}\n            </>\n          ) : (\n            <>\n              <TopIconsRow>\n                <EditIcon onClick={() => setEditMode(true)} />\n              </TopIconsRow>\n              <Title>{formik.values.Title}</Title>\n              <Description>{formik.values.Description}</Description>\n            </>\n          )\n        }\n      </Formik>\n    </Background>\n  );\n};\n\nexport default TodoCard;\n","import TodoCard from './TodoCard';\nexport default TodoCard;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Cookies from 'universal-cookie';\nimport { Redirect } from 'react-router-dom';\nimport { MdAddCircle } from 'react-icons/md';\n\nimport server from '../api';\nimport Button from '../components/Button';\nimport FullLoading from '../components/FullLoading';\nimport TodoCard from '../components/TodoCard';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-self: flex-start;\n  width: 100%;\n  height: 100%;\n`;\n\nconst TodosContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: stretch;\n  align-self: center;\n`;\n\nconst AddIcon = styled(MdAddCircle)`\n  width: 4vw;\n  height: 4vw;\n  align-self: center;\n  &:active {\n    transform: translate(2px, 2px);\n  }\n`;\n\nconst Tab = styled.div<{ isActive: boolean }>`\n  border-bottom: 1px solid\n    ${(props) => (props.isActive ? props.theme.colors.accent : 'none')};\n  margin: 10px;\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst Dashboard = () => {\n  const [loading, setLoading] = useState(true);\n  const [userData, setUserData] = useState({ name: '', email: '' });\n  const [todos, setTodos] = useState<\n    { title: string; description: string; done: boolean; id: number }[]\n  >([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [refreshTodos, setRefreshTodos] = useState(true);\n  const [newTodoBeingAdded, setNewTodoBeingAdded] = useState(false);\n  const [showDoneTodos, setShowDoneTodos] = useState(false);\n  const cookies = new Cookies();\n\n  const toggleRefresh = () => {\n    setRefreshTodos((prev) => !prev);\n  };\n\n  const fetchUserData = async () => {\n    setLoading(true);\n    server\n      .get('/user')\n      .then((response) => {\n        const body = response.data.data;\n        setUserData((prev) => ({\n          ...prev,\n          name: body.name,\n          email: body.email,\n        }));\n      })\n      .catch((error) => {\n        if (error.response) {\n          setErrorMessage(error.response.data.message);\n        }\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const fetchTodos = async () => {\n    setLoading(true);\n    server\n      .get('/todo')\n      .then((response) => {\n        setTodos(response.data.data);\n      })\n      .catch((error) => {\n        if (error.response) {\n          setErrorMessage(error.response.data.message);\n        }\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    fetchUserData();\n  }, []);\n\n  useEffect(() => {\n    fetchTodos();\n  }, [refreshTodos]);\n\n  return errorMessage ? (\n    <Redirect\n      to={{ pathname: '/login', state: { fetchUserDataError: errorMessage } }}\n    />\n  ) : (\n    <Container>\n      <FullLoading show={loading} />\n      <Button\n        onClick={() => {\n          cookies.set('token', '');\n          window.location.reload();\n        }}\n      >\n        Logoff\n      </Button>\n\n      <h1>Greetings, {userData.name}</h1>\n\n      <TodosContainer>\n        <TabsContainer>\n          <Tab\n            isActive={!showDoneTodos}\n            onClick={() => setShowDoneTodos(false)}\n          >\n            To do\n          </Tab>\n          <Tab isActive={showDoneTodos} onClick={() => setShowDoneTodos(true)}>\n            Done\n          </Tab>\n        </TabsContainer>\n\n        {newTodoBeingAdded ? (\n          <TodoCard\n            todo={{ title: '', description: '', done: false }}\n            onEditCancel={() => setNewTodoBeingAdded(false)}\n            onSave={() => {\n              setNewTodoBeingAdded(false);\n              toggleRefresh();\n            }}\n          />\n        ) : (\n          !showDoneTodos && (\n            <AddIcon onClick={() => setNewTodoBeingAdded(true)} />\n          )\n        )}\n\n        {todos.length === 0 ? (\n          <h4>No Todos were found</h4>\n        ) : (\n          todos\n            .filter((todo) => (showDoneTodos ? todo.done : !todo.done))\n            .map((todo) => (\n              <TodoCard\n                key={todo.id}\n                onSave={toggleRefresh}\n                todo={{\n                  title: todo.title,\n                  description: todo.description,\n                  done: todo.done,\n                  id: todo.id,\n                }}\n              />\n            ))\n        )}\n      </TodosContainer>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Cookies from 'universal-cookie';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport GlobalStyle from './globalStyle';\nimport Theme from './Theme';\nimport Login from './pages/Login';\nimport SignUp from './pages/SignUp';\nimport Dashboard from './pages/Dashboard';\n\nconst Container = styled.div`\n  background-color: ${(props) => props.theme.colors.background};\n  padding: 40px;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  min-height: 100vh;\n`;\n\nconst App = () => {\n  const cookies = new Cookies();\n  const isTokenSet = cookies.get('token');\n  return (\n    <>\n      {isTokenSet ? <Redirect to=\"/dashboard\" /> : <Redirect to=\"/login\" />}\n      <GlobalStyle />\n      <Theme>\n        <Container>\n          <Switch>\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/dashboard\" component={Dashboard}></Route>\n          </Switch>\n        </Container>\n      </Theme>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'dotenv/config';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}